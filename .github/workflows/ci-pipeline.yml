# Nome do nosso workflow. Aparecerá na aba "Actions" do GitHub.
name: Python CI/CD Pipeline

# "Gatilho": Define quando este workflow deve rodar.
on:
  # Roda toda vez que houver um 'push' na branch 'main'.
  push:
    branches: [ "main" ]

# "Trabalhos": Lista das tarefas que o robô deve executar.
jobs:
  # Definimos um único trabalho chamado 'build-and-test'.
  build-and-test:
    # Define o tipo de máquina que será usada (Ubuntu Linux mais recente).
    runs-on: ubuntu-latest

    # "Passos": A sequência de ações a serem executadas neste trabalho.
    steps:
      # 1. Baixa o código do seu repositório para a máquina virtual.
      - name: Checkout do codigo
        uses: actions/checkout@v4

      # 2. Prepara o ambiente Python na máquina.
      - name: Configurar Python 3.10
        uses: actions/setup-python@v4
        with:
          python-version: "3.10"

      # 3. Instala as dependências listadas no requirements.txt.
      - name: Instalar dependencias
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
      
      # 4. Executa os testes usando o pytest. Se os testes falharem, o workflow falha.
      - name: Rodar os testes
        run: pytest